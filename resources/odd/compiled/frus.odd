<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:skos="http://www.w3.org/2004/02/skos/core#" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Merged TEI PM Spec</title>
            </titleStmt>
            <publicationStmt>
                <p>Automatically generated, do not modify.</p>
            </publicationStmt>
            <sourceDesc>
                <p>Generated from input ODD: /db/apps/hsg-shell/resources/odd/source/frus.odd</p>
            </sourceDesc>
        </fileDesc>
    </teiHeader>
    <text>
        <body>
            <elementSpec mode="change" ident="ab">
                <model behaviour="paragraph"/>
            </elementSpec>
            <elementSpec mode="change" ident="abbr">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="actor">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="add">
                <model behaviour="inline">
                    <outputRendition>color: green; text-decoration: underline;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="address">
                <model behaviour="block">
                    <outputRendition>margin-top: 2em; margin-left: 2em; margin-right: 2em; margin-bottom:
            2em;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="addrLine">
                <model behaviour="block">
                    <outputRendition>white-space: nowrap;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="addSpan">
                <model behaviour="anchor">
                    <param name="id">@xml:id</param>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="am">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="anchor">
                <model behaviour="anchor">
                    <param name="id">@xml:id</param>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="argument">
                <model behaviour="block">
                    <outputRendition>margin-bottom: 0.5em;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="author">
                <model predicate="ancestor::teiHeader" behaviour="omit"/>
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="back">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="bibl">
                <constraintSpec mode="add" ident="noEmptyBibl" scheme="isoschematron">
                    <constraint>
                        <assert xmlns="http://purl.oclc.org/dsdl/schematron" test="child::* or child::text()[normalize-space()]" role="ERROR">
                Element "<sch:name xmlns:sch="http://purl.oclc.org/dsdl/schematron"/>" may not be empty.
            </assert>
                    </constraint>
                </constraintSpec>
                <model predicate="parent::listBibl" behaviour="listItem"/>
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="body">
                <modelSequence>
                    <model behaviour="index">
                        <param name="type">'toc'</param>
                    </model>
                    <model behaviour="block"/>
                </modelSequence>
            </elementSpec>
            <elementSpec mode="change" ident="byline">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="c">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="castGroup">
                <model predicate="child::*" behaviour="list">
                    <desc>Insert list. </desc>
                    <param name="content">castItem|castGroup</param>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="castItem">
                <model behaviour="listItem">
                    <desc>Insert item, rendered as described in parent list rendition. </desc>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="castList">
                <model predicate="child::*" behaviour="list" useSourceRendition="true">
                    <param name="content">castItem</param>
                    <outputRendition>list-style: ordered;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="cb">
                <model behaviour="break">
                    <param name="type">'column'</param>
                    <param name="label">@n</param>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="cell">
                <model behaviour="cell" useSourceRendition="true">
                    <desc>Insert table cell. </desc>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="choice">
                <constraintSpec ident="choiceSize" scheme="isoschematron" mode="add">
                    <constraint>
                        <assert xmlns="http://purl.oclc.org/dsdl/schematron" test="count(*) &gt; 1" role="ERROR">
                    Element "<sch:name xmlns:sch="http://purl.oclc.org/dsdl/schematron"/>" must have at least two child
		    elements.</assert>
                    </constraint>
                </constraintSpec>
                <constraintSpec ident="choiceContent" scheme="isoschematron" mode="add">
                    <constraint>
                        <assert xmlns="http://purl.oclc.org/dsdl/schematron" test="(tei:corr or tei:sic or tei:expan or     tei:abbr or tei:reg or tei:orig) and ((tei:corr and tei:sic) or (tei:expan     and tei:abbr) or (tei:reg and tei:orig))" role="ERROR">
                    Element "<sch:name xmlns:sch="http://purl.oclc.org/dsdl/schematron"/>" must have corresponding corr/sic, expand/abbr, reg/orig </assert>
                    </constraint>
                </constraintSpec>
                <model output="plain" predicate="sic and corr" behaviour="inline">
                    <param name="content">corr[1]</param>
                </model>
                <model output="plain" predicate="abbr and expan" behaviour="inline">
                    <param name="content">expan[1]</param>
                </model>
                <model output="plain" predicate="orig and reg" behaviour="inline">
                    <param name="content">reg[1]</param>
                </model>
                <model predicate="sic and corr" behaviour="alternate">
                    <param name="default">corr[1]</param>
                    <param name="alternate">sic[1]</param>
                </model>
                <model predicate="abbr and expan" behaviour="alternate">
                    <param name="default">expan[1]</param>
                    <param name="alternate">abbr[1]</param>
                </model>
                <model predicate="orig and reg" behaviour="alternate">
                    <param name="default">reg[1]</param>
                    <param name="alternate">orig[1]</param>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="cit">
                <model predicate="child::quote and child::bibl" behaviour="cit">
                    <desc>Insert citation </desc>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="closer">
                <model behaviour="block">
                    <outputRendition>text-align: right; margin-top: 1em; margin-left: 1em;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="corr">
                <model predicate="parent::choice and count(parent::*/*) gt 1" behaviour="inline">
                    <desc>simple inline, if in parent choice. </desc>
                </model>
                <model behaviour="inline">
                    <outputRendition scope="before">content: '[';</outputRendition>
                    <outputRendition scope="after">content: ']';</outputRendition>
                </model>
            </elementSpec>
            <elementSpec ident="date" mode="change">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="dateline">
                <model behaviour="block">
                    <outputRendition>text-align: right;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="del">
                <model behaviour="inline">
                    <outputRendition>   text-decoration: line-through;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="desc">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec ident="div" mode="change">
                <model output="web" predicate="$parameters?document-list and div[@type='question']" behaviour="document-list"/>
                <model output="web" predicate="$parameters?document-list and @type = ('compilation', 'chapter', 'subchapter', 'section', 'part') and exists(div[@type])" behaviour="document-list"/>
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="docAuthor">
                <model predicate="ancestor::teiHeader" behaviour="omit">
                    <desc>Omit if located in teiHeader. </desc>
                </model>
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="docDate">
                <model predicate="ancestor::teiHeader" behaviour="omit">
                    <desc>Omit if located in teiHeader. </desc>
                </model>
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="docEdition">
                <model predicate="ancestor::teiHeader" behaviour="omit">
                    <desc>Omit if located in teiHeader. </desc>
                </model>
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="docImprint">
                <model predicate="ancestor::teiHeader" behaviour="omit">
                    <desc>Omit if located in teiHeader. </desc>
                </model>
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="docTitle">
                <model predicate="ancestor::teiHeader" behaviour="omit">
                    <desc>Omit if located in teiHeader. </desc>
                </model>
                <model behaviour="block" useSourceRendition="true">
                    <outputRendition>font-size: larger;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="epigraph">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="ex">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="expan">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="figDesc">
                <model behaviour="inline">
                    <outputRendition scope="before">content: '[..';</outputRendition>
                    <outputRendition scope="after">content: '..]';</outputRendition>
                    <outputRendition>color: grey;font-style:italic;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="figure">
                <model predicate="@rend='smallfloatinline'" behaviour="block" cssClass="float-left figure-floated"/>
                <model predicate="head or @rendition='simple:display'" behaviour="block"/>
                <model behaviour="inline">
                    <outputRendition>
display: block;
</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="floatingText">
                <model behaviour="block">
                    <outputRendition>
	  margin: 6pt;
	  border: solid black 1pt;
	</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="foreign">
                <model behaviour="inline">
                    <outputRendition>font-style:italic;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="formula">
                <model predicate="@rendition='simple:display'" behaviour="block"/>
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="front">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="fw">
                <model predicate="ancestor::p or ancestor::ab" behaviour="inline"/>
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="g">
                <model predicate="not(text())" behaviour="glyph">
                    <param name="uri">@ref</param>
                </model>
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="gap">
                <model predicate="desc" behaviour="inline">
                    <outputRendition>color: grey;</outputRendition>
                </model>
                <model predicate="@extent" behaviour="inline">
                    <param name="content">@extent</param>
                    <outputRendition scope="before">content: '[..';</outputRendition>
                    <outputRendition scope="after">content: '..]';</outputRendition>
                    <outputRendition>color: grey;</outputRendition>
                </model>
                <model behaviour="inline">
                    <outputRendition scope="before">content: '[...]';</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="graphic">
                <model behaviour="graphic">
                    <param name="url">xs:anyURI('//s3.amazonaws.com/static.history.state.gov/' || $parameters?base-uri || 
                            "/" || @url || (if (matches(@url, "^.*\.(jpg|png|gif)$")) then "" else ".png"))</param>
                    <param name="width">@width</param>
                    <param name="height">@height</param>
                    <param name="scale">@scale</param>
                    <param name="title">desc</param>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="group">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="handShift">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="head">
                <model predicate="parent::figure" behaviour="block">
                    <outputRendition>font-style: italic;</outputRendition>
                </model>
                <model predicate="parent::table" behaviour="block">
                    <outputRendition>font-style: italic;</outputRendition>
                </model>
                <model predicate="parent::list/@type = ('participants', 'to', 'from', 'subject')" behaviour="block">
                    <outputRendition>margin-left: -2.8em;</outputRendition>
                </model>
                <model predicate="parent::list" behaviour="block">
                    <outputRendition>font-weight: bold;</outputRendition>
                </model>
                <model predicate="parent::div and @type='shortened-for-running-head'" behaviour="omit"/>
                <model predicate="parent::div" behaviour="heading">
                    <param name="level">count(ancestor::div)</param>
                </model>
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="hi">
                <model predicate="@rend = 'strong'" behaviour="inline">
                    <outputRendition>font-weight: bold;</outputRendition>
                </model>
                <model predicate="@rend = 'italic'" behaviour="inline">
                    <outputRendition>font-style: italic;</outputRendition>
                </model>
                <model predicate="@rend = 'smallcaps'" behaviour="inline">
                    <outputRendition>font-variant: small-caps;</outputRendition>
                </model>
                <model predicate="@rendition" behaviour="inline" useSourceRendition="true">
                    <outputRendition>font-style: italic;</outputRendition>
                </model>
                <model predicate="not(@rendition)" behaviour="inline">
                    <outputRendition>font-style: italic;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="imprimatur">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="item">
                <model behaviour="listItem"/>
            </elementSpec>
            <elementSpec mode="change" ident="l">
                <model behaviour="block" useSourceRendition="true">
                    <outputRendition> margin-left: 1em; </outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="label"><!-- Silly rule to avoid class 'label' -->
                <model predicate="@foo='baz'" behaviour="inline"/>
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="lb">
                <model behaviour="break" useSourceRendition="true">
                    <param name="type">'line'</param>
                    <param name="label">@n</param>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="lg">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="list"><!-- TODO: check against PM spec. Not sure if modelSequence can be used like this. -->
                <modelSequence predicate="head">
                    <model behaviour="heading" cssClass="listHead">
                        <param name="content">head/node()</param>
                        <param name="level">4</param>
                    </model>
                    <model behaviour="list" cssClass="list">
                        <param name="content">item</param>
                        <outputRendition>list-style-type: none; text-indent: -1em; margin-left: 1em; padding-left: 0</outputRendition>
                    </model>
                </modelSequence>
                <model predicate="@rend = 'bulleted'" behaviour="list">
                    <param name="content">item</param>
                    <outputRendition>list-style-type: disc;</outputRendition>
                </model>
                <model predicate="@type = ('participants', 'to', 'from', 'subject')" behaviour="list">
                    <param name="content">item</param>
                    <outputRendition>list-style-type: none; line-height: 1.3em;</outputRendition>
                </model>
                <model predicate="label" behaviour="list" cssClass="labeled-list">
                    <param name="content">item</param>
                </model>
                <model behaviour="list" cssClass="list">
                    <param name="content">item</param>
                    <outputRendition>list-style-type: none; text-indent: -1em; margin-left: 1em; padding-left: 0</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="listBibl">
                <model predicate="bibl" behaviour="list">
                    <param name="content">bibl</param>
                </model>
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="measure">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="milestone">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="name">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="note">
                <model predicate="@rend = 'inline'" behaviour="paragraph">
                    <outputRendition>font-size: smaller;</outputRendition>
                </model>
                <model behaviour="note">
                    <param name="place">"foot"</param>
                    <param name="label">@n/string()</param>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="num">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="opener">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="orig">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="p">
                <model predicate="@rend = 'center'" behaviour="paragraph" useSourceRendition="true">
                    <outputRendition>text-align: center;</outputRendition>
                </model>
                <model predicate="@rend = 'flushleft'" behaviour="paragraph" useSourceRendition="true">
                    <outputRendition>text-indent: 0em;</outputRendition>
                </model>
                <model behaviour="paragraph" useSourceRendition="true">
                    <outputRendition>text-indent: 0em;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec ident="pb" mode="change">
                <modelSequence>
                    <model output="web" behaviour="link">
                        <param name="content">concat('[Page ', @n, ']')</param>
                        <param name="link">@xml:id</param><!--<param name="link">concat('//s3.amazonaws.com/static.history.state.gov/frus/', root(.)/TEI/@xml:id, '/medium/', @facs, '.png')</param>-->
                        <outputRendition>display: block; margin-left: 4pt; color: grey; float: right;</outputRendition>
                    </model>
                    <model output="print" behaviour="omit"/>
                </modelSequence>
            </elementSpec>
            <elementSpec mode="change" ident="pc">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="postscript">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec ident="publisher" mode="change">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec ident="pubPlace" mode="change">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="q">
                <model predicate="l" behaviour="block" useSourceRendition="true">
                    <outputRendition>margin-left: 10px; margin-right: 10px;
		</outputRendition>
                </model>
                <model predicate="ancestor::p or ancestor::cell" behaviour="inline" useSourceRendition="true">
                    <outputRendition scope="before">content: '‘';</outputRendition>
                    <outputRendition scope="after">content: '’';</outputRendition>
                </model>
                <model behaviour="block" useSourceRendition="true">
                    <outputRendition>margin-left: 10px; margin-right: 10px;
		</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="quote">
                <model predicate="ancestor::p and empty(descendant::p|descendant::div)" behaviour="inline" useSourceRendition="true">
                    <desc>If it is inside a paragraph then it is inline, otherwise it is block level; no extra quote marks around</desc><!--
                        <outputRendition scope="before">content: '‘';</outputRendition>
                        <outputRendition scope="after">content: '’';</outputRendition>
-->
                </model>
                <model behaviour="block" useSourceRendition="true">
                    <desc>If it is inside a paragraph then it is inline, otherwise it is block level</desc>
                    <outputRendition>margin-left: 10px; margin-right: 10px;
                        </outputRendition>
                </model>
            </elementSpec>
            <elementSpec ident="ref" mode="change">
                <model behaviour="ref"/>
            </elementSpec>
            <elementSpec mode="change" ident="reg">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="rhyme">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="role">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="roleDesc">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="row">
                <model behaviour="row" useSourceRendition="true">
                    <desc>Insert table row. </desc>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="rs">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="s">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="salute">
                <model predicate="parent::closer" behaviour="inline"/>
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="seg">
                <model behaviour="inline" useSourceRendition="true"/>
            </elementSpec>
            <elementSpec ident="sic" mode="change">
                <model predicate="parent::choice and count(parent::*/*) gt 1" behaviour="inline"/>
                <model behaviour="inline">
                    <outputRendition scope="before">content: '{';</outputRendition>
                    <outputRendition scope="after">content: '}';</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="signed">
                <model behaviour="block" predicate="parent::closer">
                    <outputRendition>
		  text-align: right;
		</outputRendition>
                </model>
                <model behaviour="inline">
                    <outputRendition>
		 font-style: italic;
		</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="sp">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="space">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="speaker">
                <model behaviour="block">
                    <outputRendition> font-style:italic; </outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="spGrp">
                <model behaviour="block"/>
            </elementSpec>
            <elementSpec mode="change" ident="stage">
                <model behaviour="block">
                    <outputRendition>font-style: italic;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="subst">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="supplied">
                <model predicate="parent::choice" behaviour="inline"/>
                <model predicate="@reason='damage'" behaviour="inline">
                    <outputRendition scope="before">content:"&lt;";</outputRendition>
                    <outputRendition scope="after">content:"&gt;";</outputRendition>
                </model>
                <model predicate="@reason='illegible' or not(@reason)" behaviour="inline">
                    <outputRendition scope="before">content:"[";</outputRendition>
                    <outputRendition scope="after">content:"]";</outputRendition>
                </model>
                <model predicate="@reason='omitted'" behaviour="inline">
                    <outputRendition scope="before">content:"(";</outputRendition>
                    <outputRendition scope="after">content:")";</outputRendition>
                </model>
                <model behaviour="inline">
                    <outputRendition scope="before">content:"{";</outputRendition>
                    <outputRendition scope="after">content:"}";</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="table">
                <model behaviour="table" useSourceRendition="true" cssClass="table table-hover table-bordered"/>
            </elementSpec>
            <elementSpec mode="change" ident="fileDesc">
                <modelSequence>
                    <model behaviour="block">
                        <param name="content">titleStmt</param>
                    </model>
                    <model behaviour="block">
                        <param name="content">publicationStmt</param>
                    </model>
                </modelSequence>
            </elementSpec>
            <elementSpec mode="change" ident="profileDesc">
                <model behaviour="omit"/>
            </elementSpec>
            <elementSpec mode="change" ident="revisionDesc">
                <model behaviour="omit"/>
            </elementSpec>
            <elementSpec mode="change" ident="encodingDesc">
                <model behaviour="omit"/>
            </elementSpec>
            <elementSpec mode="change" ident="teiHeader">
                <modelSequence>
                    <model output="web" behaviour="block"/>
                    <model behaviour="omit"/>
                </modelSequence>
            </elementSpec>
            <elementSpec mode="change" ident="TEI">
                <model behaviour="document"/>
            </elementSpec>
            <elementSpec mode="change" ident="text">
                <model behaviour="body">
                    <outputRendition>
            max-width: 80%;
            margin: auto;
            font-family: Verdana, Tahoma, Geneva, Arial, Helvetica, sans-serif;
         </outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="time">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec ident="title" mode="change">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="titlePage">
                <model behaviour="block" useSourceRendition="true">
                    <outputRendition>    text-align: center;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="titlePart">
                <model behaviour="block" useSourceRendition="true"/>
            </elementSpec>
            <elementSpec mode="change" ident="trailer">
                <model behaviour="block">
                    <outputRendition>color: green;</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="unclear">
                <model behaviour="inline">
                    <outputRendition scope="after">content: ' [?] ';</outputRendition>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="w">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec mode="change" ident="cell">
                <model behaviour="cell" useSourceRendition="true">
                    <desc>Insert table cell. </desc>
                </model>
            </elementSpec>
            <elementSpec mode="change" ident="row">
                <model behaviour="row" useSourceRendition="true">
                    <desc>Insert table row. </desc>
                </model>
            </elementSpec>
            <elementSpec ident="titleStmt" mode="change">
                <modelSequence>
                    <model behaviour="heading">
                        <param name="content">title[@type="complete"]</param>
                    </model><!-- Singular vs. plural for "editor(s)" -->
                    <model predicate="count(editor[@role = 'primary']) gt 1" behaviour="block">
                        <param name="content">"Editors:"</param>
                        <outputRendition>font-weight: bold</outputRendition>
                    </model>
                    <model predicate="count(editor[@role = 'primary']) eq 1" behaviour="block">
                        <param name="content">"Editor:"</param>
                        <outputRendition>font-weight: bold</outputRendition>
                    </model>
                    <model predicate="editor[@role = 'primary']" behaviour="list-from-items">
                        <param name="content">editor[@role="primary"]</param>
                        <outputRendition>list-style-type: none</outputRendition>
                    </model>
                    <model predicate="editor[@role = 'general']" behaviour="block">
                        <param name="content">"General Editor:"</param>
                        <outputRendition>font-weight: bold</outputRendition>
                    </model>
                    <model predicate="editor[@role = 'general']" behaviour="list-from-items">
                        <param name="content">editor[@role="general"]</param>
                        <outputRendition>list-style-type: none</outputRendition>
                    </model>
                </modelSequence>
            </elementSpec>
            <elementSpec ident="publicationStmt" mode="change">
                <modelSequence>
                    <model behaviour="block">
                        <param name="content">publisher</param>
                    </model>
                    <model behaviour="block">
                        <param name="content">pubPlace</param>
                    </model>
                    <model behaviour="block">
                        <param name="content">date</param>
                    </model>
                </modelSequence>
            </elementSpec>
            <elementSpec ident="xhtml:object" mode="add">
                <model behaviour="passthrough"/>
            </elementSpec>
            <elementSpec ident="xhtml:div" mode="add">
                <model behaviour="passthrough"/>
            </elementSpec>
            <elementSpec ident="xhtml:script" mode="add">
                <model behaviour="passthrough"/>
            </elementSpec>
            <elementSpec ident="persName" mode="add">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec ident="gloss" mode="add">
                <model behaviour="inline"/>
            </elementSpec>
            <elementSpec ident="term" mode="add">
                <model behaviour="inline"/>
            </elementSpec>
            <outputRendition xml:id="allcaps">text-transform: uppercase;</outputRendition>
            <outputRendition xml:id="blackletter">font-family: fantasy;</outputRendition>
            <outputRendition xml:id="bold">font-weight: bold;</outputRendition>
            <outputRendition xml:id="bottombraced">padding-bottom: 2pt; border-bottom: dashed gray 2pt;</outputRendition>
            <outputRendition xml:id="block">display:block;</outputRendition>
            <outputRendition xml:id="boxed">padding: 2pt; border: solid black 1pt;</outputRendition>
            <outputRendition xml:id="centre">text-align: center;</outputRendition>
            <outputRendition xml:id="cursive">font-family: cursive;</outputRendition>
            <outputRendition xml:id="doublestrikethrough">text-decoration: line-through;    color: red;</outputRendition>
            <outputRendition xml:id="doubleunderline">text-decoration: underline;    color: red;</outputRendition>
            <outputRendition xml:id="dropcap">font-size : 6em;
    font-family: cursive;
    font-weight : bold;
    vertical-align: top;
    height: 1em;
    line-height: 1em;
    float : left;
    width : 1em;
    color : #c00;
    margin: 0em;
    padding: 0px;</outputRendition>
            <outputRendition xml:id="float">float:right;    display: block;
    font-size: smaller;
    clear: right;
    padding: 4pt;
    width: 15%;
</outputRendition>
            <outputRendition xml:id="hyphen"/>
            <outputRendition xml:id="inline">display:inline;</outputRendition>
            <outputRendition xml:id="italic">font-style: italic;</outputRendition>
            <outputRendition xml:id="justify">text-align: justify;</outputRendition>
            <outputRendition xml:id="larger">font-size: larger;</outputRendition>
            <outputRendition xml:id="left">text-align: left;</outputRendition>
            <outputRendition xml:id="leftbraced">padding-left: 2pt; border-left: dotted gray 2pt; </outputRendition>
            <outputRendition xml:id="letterspace">letter-spacing: 0.5em;</outputRendition>
            <outputRendition xml:id="literal">font-family:monospace;    white-space:pre;</outputRendition>
            <outputRendition xml:id="normalstyle">font-style:roman;</outputRendition>
            <outputRendition xml:id="normalweight">font-weight:normal;</outputRendition>
            <outputRendition xml:id="right">text-align: right;</outputRendition>
            <outputRendition xml:id="rightbraced">padding-right: 2pt; border-right: dotted gray 2pt; </outputRendition>
            <outputRendition xml:id="rotateleft">-webkit-transform: rotate(90deg);    transform: rotate(90deg);</outputRendition>
            <outputRendition xml:id="rotateright">-webkit-transform: rotate(-90deg);    transform: rotate(-90deg);</outputRendition>
            <outputRendition xml:id="rules">border: 1px solid black; padding: 2px;border-collapse:collapse;border-spacing:0;</outputRendition>
            <outputRendition xml:id="smallcaps">font-variant: small-caps;</outputRendition>
            <outputRendition xml:id="smaller">font-size: smaller;</outputRendition>
            <outputRendition xml:id="strikethrough">text-decoration: line-through;</outputRendition>
            <outputRendition xml:id="subscript">vertical-align: bottom;    font-size: smaller;</outputRendition>
            <outputRendition xml:id="superscript">vertical-align: super;    font-size: smaller;</outputRendition>
            <outputRendition xml:id="topbraced">padding-top: 2pt;  border-top: dotted gray 2pt; </outputRendition>
            <outputRendition xml:id="typewriter">font-family:monospace;</outputRendition>
            <outputRendition xml:id="underline">text-decoration: underline;</outputRendition>
            <outputRendition xml:id="wavyunderline">text-decoration: underline;       text-decoration-style: wavy;</outputRendition>
        </body>
    </text>
</TEI>