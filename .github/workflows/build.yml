# This workflow builds a xar archive, deploys it into exist and execute a simple smoke test.
# It also includes code for using semantic-release to upload packages as part of GitHub releases
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# For node free automated release see https://trstringer.com/github-actions-create-release-upload-artifacts/ 

name: exist-db CI

on: [push, pull_request]
env:
  TEST_TAG: ${{ secrets.DOCKER_USERNAME }}/hsg-project:exist-ci

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
       fail-fast: false
       matrix:
        # 7.0.0-SNAPSHOT and 6.2.1 created
         exist-version: [latest, release]
         java-version: [11, 17]
         exclude:
           - exist-version: release
             java-version: 17
           - exist-version: latest
             java-version: 11

    steps:
      # Checkout code
      - uses: actions/checkout@v4
      - name: Install Test Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils bats

      # Prepare Docker Environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64 
          # platforms: all
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Make buildkit default
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          install: true
      
      # sanity check
      # TODO(DP) Validate ?
      - name: Ensure all XML files are well-formed
        run: |
          xmllint --noout \
            $(find . -type f -name '*.xml')

      # Build Environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: npm  
          node-version: lts/* 
      - name: Build Expath Package
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
      - run: ant

      - name: Build default images for testing on CI
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: ${{ env.TEST_TAG }}
          build-args: ${{ matrix.exist-version }}

      # Install Package in Exist
      # TODO(DP) Sleep will be much longer TBD
      - name: Start exist-ci containers
        run: |
          docker run -dit -p 8080:8080 --name exist-ci --rm ${{ env.TEST_TAG }}
          sleep 15s

      # Test       
      - name: Run test
        run: bats --tap test/*.bats

      # Lint commit messages
      - name: lint commit message
        uses: wagoid/commitlint-github-action@v5

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Prepare Docker Environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64 
          # platforms: all
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Make buildkit default
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          install: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: npm  
          node-version: lts/*
      - name: Install dependencies
        run: npm ci --no-optional   
      - name: Perform Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLIC_REPO: ${{ secrets.PUBLIC_REPO }}
        run: npx semantic-release

        # TODO(DP) avoid duplicate building ala duncrum/distroless-exist
        # TODO(DP) publish both release and latest images to dockerhub
        # TODO(DP) add CRON ?
        # TODO(DP) use ghcr
      - name: Push :latest to Dockerhub
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile
          build-args: EXIST_VER=release
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/hsg-project:release
          # cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/hsg-project:buildcache
          # cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/hsg-project:buildcache,mode=max

        # TODO(DP): 
        #   - add secrets to github
        #   - publish to public repo?
