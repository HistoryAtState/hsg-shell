<?xml version="1.0" encoding="UTF-8"?>
<project default="xar" name="hsg-shell" basedir=".">
    <xmlproperty file="build.properties.local.xml" semanticAttributes="true" keepRoot="false"/>
    <xmlproperty file="build.properties.xml" semanticAttributes="true" keepRoot="false"/>
    <xmlproperty file="expath-pkg.xml"/>
    <property name="build.dir" value="build"/>
    <property name="git.repo.path" value="${basedir}/.git"/>
    <available file="${git.repo.path}" type="dir" property="git.present"/>

    <property environment="env"/>
    <property name="files-to-be-excluded" value="${build.dir}/**,**/*.tmpl,node_modules/**,package.json,package-lock.json,gulpfile.js,.idea/**,.* example.local.build.properties,npm-shrinkwrap.json,tests/reports/**"/>
    
    <!-- Allow NODE_ENV to be passed in either as an environment variable or as a regular variable -->
    <condition property="node-env-is-set-for-production" else="false">
        <or>
            <equals arg1="${env.NODE_ENV}" arg2="production"/>
            <equals arg1="${NODE_ENV}" arg2="production"/>
        </or>
    </condition>
    
    <!-- Create a new property that sets production mode based on whether either variation of NODE_ENV is set to production -->
    <condition property="NODE_ENV.production" value="production" else="development">
        <istrue value="${node-env-is-set-for-production}"/>
    </condition>
    
    <target name="clean">
        <echo message="Calling gulp clean..."/>
        <exec executable="${gulp}" outputproperty="gulp.output">
            <arg line="clean"/>
            <env key="PATH" value="${node.path}:${env.PATH}"/>
        </exec>
        <echo message="${gulp.output}"/>
    
        <echo message="Deleting xar files..."/>
        <delete dir="${build.dir}"/>
    </target>
    
    
    <target name="run-npm">
        <echo message="Calling npm start... (Production? ${node-env-is-set-for-production})"/>
        <exec executable="${npm}" outputproperty="npm.output">
            <arg line="start"/>
            <env key="PATH" value="${node.path}:${env.PATH}"/>
            <env key="NODE_ENV" value="${NODE_ENV.production}"/>
        </exec>
        <echo message="${npm.output}"/>
    </target>
    
        
    <target name="xar" depends="clean,run-npm" description="create xar file">
        <echo message="Creating build folder..."/>
        <mkdir dir="${build.dir}"/>
        <copy todir="${basedir}" overwrite="true" verbose="true">        
            <fileset file="*.xml.tmpl"/>
            <filterset>
                <filter token="name" value="${app.name}"/>
                <filter token="version" value="${app.version}"/>
                <filter token="url" value="${app.url}"/>
                <filter token="title" value="${app.title}"/>
                <filter token="commit-id" value="${git.revision}"/>
                <filter token="commit-time" value="${git.time}"/>
            </filterset>
            <globmapper from="*.tmpl" to="*"/>
        </copy>


        <echo message="------------------------------------------------------------"/>
        <echo message="Creating xar file..."/>
        <echo message="------------------------------------------------------------"/>
        
        <zip basedir="${basedir}" destfile="${build.dir}/${app.name}-${app.version}.xar">
            <exclude name="${build.dir}/**"/>
            <exclude name="*.tmpl"/>
            <exclude name="hsg-shell.xpr"/>   
            <exclude name="build.properties.local.example.xml"/>            
            <exclude name="build.properties.xml"/>
            <exclude name="build.xml"/>
            <exclude name="node_modules/**"/>
            <exclude name="package.json"/>
            <exclude name="package-lock.json"/>
            <exclude name="bower.json"/>
            <exclude name=".idea/**"/>
            <exclude name="tests/reports/**"/>
            <exclude name="npm-shrinkwrap.json"/>
            <exclude name="build.properties.local.xml"/>
            <exclude name="local.node-exist.json"/>   
            <exclude name="wdio*"/>         
        </zip>        
    </target>
</project>
